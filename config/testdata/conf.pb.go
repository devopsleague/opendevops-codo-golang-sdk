// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v5.27.2
// source: conf/conf.proto

package testdata

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AppConfig_Environment int32

const (
	AppConfig_NONE AppConfig_Environment = 0
	AppConfig_DEV  AppConfig_Environment = 1
	AppConfig_PRE  AppConfig_Environment = 2
	AppConfig_PRD  AppConfig_Environment = 3
)

// Enum value maps for AppConfig_Environment.
var (
	AppConfig_Environment_name = map[int32]string{
		0: "NONE",
		1: "DEV",
		2: "PRE",
		3: "PRD",
	}
	AppConfig_Environment_value = map[string]int32{
		"NONE": 0,
		"DEV":  1,
		"PRE":  2,
		"PRD":  3,
	}
)

func (x AppConfig_Environment) Enum() *AppConfig_Environment {
	p := new(AppConfig_Environment)
	*p = x
	return p
}

func (x AppConfig_Environment) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppConfig_Environment) Descriptor() protoreflect.EnumDescriptor {
	return file_conf_conf_proto_enumTypes[0].Descriptor()
}

func (AppConfig_Environment) Type() protoreflect.EnumType {
	return &file_conf_conf_proto_enumTypes[0]
}

func (x AppConfig_Environment) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppConfig_Environment.Descriptor instead.
func (AppConfig_Environment) EnumDescriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{1, 0}
}

type Bootstrap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: env:"CODO_APP"
	APP *AppConfig `protobuf:"bytes,1,opt,name=APP,proto3" json:"APP,omitempty" env:"CODO_APP"`
	// @gotags: env:"CODO_DB"
	DB *DBConfig `protobuf:"bytes,2,opt,name=DB,proto3" json:"DB,omitempty" env:"CODO_DB"`
	// @gotags: env:"CODO_REDIS"
	REDIS *RedisConfig `protobuf:"bytes,3,opt,name=REDIS,proto3" json:"REDIS,omitempty" env:"CODO_REDIS"`
	// @gotags: env:"CODO_OTEL"
	OTEL *OTELConfig `protobuf:"bytes,4,opt,name=OTEL,proto3" json:"OTEL,omitempty" env:"CODO_OTEL"`
	// @gotags: env:"CODO_PROMETHEUS"
	PROMETHEUS *PrometheusConfig `protobuf:"bytes,5,opt,name=PROMETHEUS,proto3" json:"PROMETHEUS,omitempty" env:"CODO_PROMETHEUS"`
	// @gotags: env:"CODO_PPROF"
	PPROF *PprofConfig `protobuf:"bytes,6,opt,name=PPROF,proto3" json:"PPROF,omitempty" env:"CODO_PPROF"`
}

func (x *Bootstrap) Reset() {
	*x = Bootstrap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bootstrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bootstrap) ProtoMessage() {}

func (x *Bootstrap) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bootstrap.ProtoReflect.Descriptor instead.
func (*Bootstrap) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{0}
}

func (x *Bootstrap) GetAPP() *AppConfig {
	if x != nil {
		return x.APP
	}
	return nil
}

func (x *Bootstrap) GetDB() *DBConfig {
	if x != nil {
		return x.DB
	}
	return nil
}

func (x *Bootstrap) GetREDIS() *RedisConfig {
	if x != nil {
		return x.REDIS
	}
	return nil
}

func (x *Bootstrap) GetOTEL() *OTELConfig {
	if x != nil {
		return x.OTEL
	}
	return nil
}

func (x *Bootstrap) GetPROMETHEUS() *PrometheusConfig {
	if x != nil {
		return x.PROMETHEUS
	}
	return nil
}

func (x *Bootstrap) GetPPROF() *PprofConfig {
	if x != nil {
		return x.PPROF
	}
	return nil
}

type AppConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: env:"CODO_APP_NAME"
	NAME string `protobuf:"bytes,1,opt,name=NAME,proto3" json:"NAME,omitempty" env:"CODO_APP_NAME"`
	// @gotags: env:"CODO_APP_ENV"
	ENV AppConfig_Environment `protobuf:"varint,2,opt,name=ENV,proto3,enum=kratos.api.AppConfig_Environment" json:"ENV,omitempty" env:"CODO_APP_ENV"`
	// @gotags: env:"CODO_APP_TIMEOUT"
	TIMEOUT *durationpb.Duration `protobuf:"bytes,3,opt,name=TIMEOUT,proto3" json:"TIMEOUT,omitempty" env:"CODO_APP_TIMEOUT"`
	// @gotags: env:"CODO_APP_PROTOCOL"
	PROTOCOL string `protobuf:"bytes,4,opt,name=PROTOCOL,proto3" json:"PROTOCOL,omitempty" env:"CODO_APP_PROTOCOL"`
	// @gotags: env:"CODO_APP_ADDR"
	ADDR string `protobuf:"bytes,5,opt,name=ADDR,proto3" json:"ADDR,omitempty" env:"CODO_APP_ADDR"`
	// @gotags: env:"CODO_APP_NETWORK"
	NETWORK string `protobuf:"bytes,6,opt,name=NETWORK,proto3" json:"NETWORK,omitempty" env:"CODO_APP_NETWORK"`
	// @gotags: env:"CODO_APP_VERSION"
	VERSION string `protobuf:"bytes,7,opt,name=VERSION,proto3" json:"VERSION,omitempty" env:"CODO_APP_VERSION"`
}

func (x *AppConfig) Reset() {
	*x = AppConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppConfig) ProtoMessage() {}

func (x *AppConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppConfig.ProtoReflect.Descriptor instead.
func (*AppConfig) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{1}
}

func (x *AppConfig) GetNAME() string {
	if x != nil {
		return x.NAME
	}
	return ""
}

func (x *AppConfig) GetENV() AppConfig_Environment {
	if x != nil {
		return x.ENV
	}
	return AppConfig_NONE
}

func (x *AppConfig) GetTIMEOUT() *durationpb.Duration {
	if x != nil {
		return x.TIMEOUT
	}
	return nil
}

func (x *AppConfig) GetPROTOCOL() string {
	if x != nil {
		return x.PROTOCOL
	}
	return ""
}

func (x *AppConfig) GetADDR() string {
	if x != nil {
		return x.ADDR
	}
	return ""
}

func (x *AppConfig) GetNETWORK() string {
	if x != nil {
		return x.NETWORK
	}
	return ""
}

func (x *AppConfig) GetVERSION() string {
	if x != nil {
		return x.VERSION
	}
	return ""
}

type PrometheusConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: env:"CODO_PROMETHEUS_ENABLE"
	ENABLED bool `protobuf:"varint,1,opt,name=ENABLED,proto3" json:"ENABLED,omitempty" env:"CODO_PROMETHEUS_ENABLE"`
	// @gotags: env:"CODO_PROMETHEUS_NETWORK"
	NETWORK string `protobuf:"bytes,2,opt,name=NETWORK,proto3" json:"NETWORK,omitempty" env:"CODO_PROMETHEUS_NETWORK"`
	// @gotags: env:"CODO_PROMETHEUS_ADDR"
	ADDR string `protobuf:"bytes,3,opt,name=ADDR,proto3" json:"ADDR,omitempty" env:"CODO_PROMETHEUS_ADDR"`
	// @gotags: env:"CODO_PROMETHEUS_PATH"
	PATH string `protobuf:"bytes,4,opt,name=PATH,proto3" json:"PATH,omitempty" env:"CODO_PROMETHEUS_PATH"`
}

func (x *PrometheusConfig) Reset() {
	*x = PrometheusConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusConfig) ProtoMessage() {}

func (x *PrometheusConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusConfig.ProtoReflect.Descriptor instead.
func (*PrometheusConfig) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{2}
}

func (x *PrometheusConfig) GetENABLED() bool {
	if x != nil {
		return x.ENABLED
	}
	return false
}

func (x *PrometheusConfig) GetNETWORK() string {
	if x != nil {
		return x.NETWORK
	}
	return ""
}

func (x *PrometheusConfig) GetADDR() string {
	if x != nil {
		return x.ADDR
	}
	return ""
}

func (x *PrometheusConfig) GetPATH() string {
	if x != nil {
		return x.PATH
	}
	return ""
}

type PprofConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: env:"CODO_PPROF_ENABLE"
	ENABLE bool `protobuf:"varint,1,opt,name=ENABLE,proto3" json:"ENABLE,omitempty" env:"CODO_PPROF_ENABLE"`
	// @gotags: env:"CODO_PPROF_NETWORK"
	NETWORK string `protobuf:"bytes,2,opt,name=NETWORK,proto3" json:"NETWORK,omitempty" env:"CODO_PPROF_NETWORK"`
	// @gotags: env:"CODO_PPROF_ADDR"
	ADDR string `protobuf:"bytes,3,opt,name=ADDR,proto3" json:"ADDR,omitempty" env:"CODO_PPROF_ADDR"`
}

func (x *PprofConfig) Reset() {
	*x = PprofConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PprofConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PprofConfig) ProtoMessage() {}

func (x *PprofConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PprofConfig.ProtoReflect.Descriptor instead.
func (*PprofConfig) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{3}
}

func (x *PprofConfig) GetENABLE() bool {
	if x != nil {
		return x.ENABLE
	}
	return false
}

func (x *PprofConfig) GetNETWORK() string {
	if x != nil {
		return x.NETWORK
	}
	return ""
}

func (x *PprofConfig) GetADDR() string {
	if x != nil {
		return x.ADDR
	}
	return ""
}

type DBConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: env:"CODO_DB_TYPE"
	DB_TYPE string `protobuf:"bytes,1,opt,name=DB_TYPE,json=DBTYPE,proto3" json:"DB_TYPE,omitempty" env:"CODO_DB_TYPE"`
	// @gotags: env:"CODO_DB_USER"
	DB_USER string `protobuf:"bytes,2,opt,name=DB_USER,json=DBUSER,proto3" json:"DB_USER,omitempty" env:"CODO_DB_USER"`
	// @gotags: env:"CODO_DB_PASSWORD"
	DB_PASSWORD string `protobuf:"bytes,3,opt,name=DB_PASSWORD,json=DBPASSWORD,proto3" json:"DB_PASSWORD,omitempty" env:"CODO_DB_PASSWORD"`
	// @gotags: env:"CODO_DB_HOST"
	DB_HOST string `protobuf:"bytes,4,opt,name=DB_HOST,json=DBHOST,proto3" json:"DB_HOST,omitempty" env:"CODO_DB_HOST"`
	// @gotags: env:"CODO_DB_NAME"
	DB_NAME string `protobuf:"bytes,5,opt,name=DB_NAME,json=DBNAME,proto3" json:"DB_NAME,omitempty" env:"CODO_DB_NAME"`
	// @gotags: env:"CODO_DB_TABLE_PREFIX"
	DB_TABLE_PREFIX string `protobuf:"bytes,6,opt,name=DB_TABLE_PREFIX,json=DBTABLEPREFIX,proto3" json:"DB_TABLE_PREFIX,omitempty" env:"CODO_DB_TABLE_PREFIX"`
	// @gotags: env:"CODO_DB_FILE"
	DB_FILE string `protobuf:"bytes,7,opt,name=DB_FILE,json=DBFILE,proto3" json:"DB_FILE,omitempty" env:"CODO_DB_FILE"`
	// @gotags: env:"CODO_DB_PORT"
	DB_PORT string `protobuf:"bytes,8,opt,name=DB_PORT,json=DBPORT,proto3" json:"DB_PORT,omitempty" env:"CODO_DB_PORT"`
	// @gotags: env:"CODO_DB_MAX_IDLE_CONNS"
	DB_MaxIdleConns uint32 `protobuf:"varint,9,opt,name=DB_MaxIdleConns,json=DBMaxIdleConns,proto3" json:"DB_MaxIdleConns,omitempty" env:"CODO_DB_MAX_IDLE_CONNS"`
	// @gotags: env:"CODO_DB_MAX_OPEN_CONNS"
	DB_MaxOpenConns uint32 `protobuf:"varint,10,opt,name=DB_MaxOpenConns,json=DBMaxOpenConns,proto3" json:"DB_MaxOpenConns,omitempty" env:"CODO_DB_MAX_OPEN_CONNS"`
	// @gotags: env:"CODO_DB_CONN_MAX_LIFETIME"
	DB_ConnMaxLifetime *durationpb.Duration `protobuf:"bytes,11,opt,name=DB_ConnMaxLifetime,json=DBConnMaxLifetime,proto3" json:"DB_ConnMaxLifetime,omitempty" env:"CODO_DB_CONN_MAX_LIFETIME"`
	// @gotags: env:"CODO_DB_DEBUG"
	DEBUG bool `protobuf:"varint,12,opt,name=DEBUG,proto3" json:"DEBUG,omitempty" env:"CODO_DB_DEBUG"`
}

func (x *DBConfig) Reset() {
	*x = DBConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBConfig) ProtoMessage() {}

func (x *DBConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBConfig.ProtoReflect.Descriptor instead.
func (*DBConfig) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{4}
}

func (x *DBConfig) GetDB_TYPE() string {
	if x != nil {
		return x.DB_TYPE
	}
	return ""
}

func (x *DBConfig) GetDB_USER() string {
	if x != nil {
		return x.DB_USER
	}
	return ""
}

func (x *DBConfig) GetDB_PASSWORD() string {
	if x != nil {
		return x.DB_PASSWORD
	}
	return ""
}

func (x *DBConfig) GetDB_HOST() string {
	if x != nil {
		return x.DB_HOST
	}
	return ""
}

func (x *DBConfig) GetDB_NAME() string {
	if x != nil {
		return x.DB_NAME
	}
	return ""
}

func (x *DBConfig) GetDB_TABLE_PREFIX() string {
	if x != nil {
		return x.DB_TABLE_PREFIX
	}
	return ""
}

func (x *DBConfig) GetDB_FILE() string {
	if x != nil {
		return x.DB_FILE
	}
	return ""
}

func (x *DBConfig) GetDB_PORT() string {
	if x != nil {
		return x.DB_PORT
	}
	return ""
}

func (x *DBConfig) GetDB_MaxIdleConns() uint32 {
	if x != nil {
		return x.DB_MaxIdleConns
	}
	return 0
}

func (x *DBConfig) GetDB_MaxOpenConns() uint32 {
	if x != nil {
		return x.DB_MaxOpenConns
	}
	return 0
}

func (x *DBConfig) GetDB_ConnMaxLifetime() *durationpb.Duration {
	if x != nil {
		return x.DB_ConnMaxLifetime
	}
	return nil
}

func (x *DBConfig) GetDEBUG() bool {
	if x != nil {
		return x.DEBUG
	}
	return false
}

type OTELConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: env:"CODO_OTEL_TRACE"
	TRACE *OTELConfig_Trace `protobuf:"bytes,1,opt,name=TRACE,proto3" json:"TRACE,omitempty" env:"CODO_OTEL_TRACE"`
	// @gotags: env:"CODO_OTEL_METRIC"
	METRIC *OTELConfig_Metric `protobuf:"bytes,2,opt,name=METRIC,proto3" json:"METRIC,omitempty" env:"CODO_OTEL_METRIC"`
	// @gotags: env:"CODO_OTEL_LOG"
	LOG *OTELConfig_Log `protobuf:"bytes,3,opt,name=LOG,proto3" json:"LOG,omitempty" env:"CODO_OTEL_LOG"`
}

func (x *OTELConfig) Reset() {
	*x = OTELConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OTELConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTELConfig) ProtoMessage() {}

func (x *OTELConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTELConfig.ProtoReflect.Descriptor instead.
func (*OTELConfig) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{5}
}

func (x *OTELConfig) GetTRACE() *OTELConfig_Trace {
	if x != nil {
		return x.TRACE
	}
	return nil
}

func (x *OTELConfig) GetMETRIC() *OTELConfig_Metric {
	if x != nil {
		return x.METRIC
	}
	return nil
}

func (x *OTELConfig) GetLOG() *OTELConfig_Log {
	if x != nil {
		return x.LOG
	}
	return nil
}

type RedisConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: env:"CODO_REDIS_HOST"
	R_HOST string `protobuf:"bytes,1,opt,name=R_HOST,json=RHOST,proto3" json:"R_HOST,omitempty" env:"CODO_REDIS_HOST"`
	// @gotags: env:"CODO_REDIS_PORT"
	R_PORT uint32 `protobuf:"varint,2,opt,name=R_PORT,json=RPORT,proto3" json:"R_PORT,omitempty" env:"CODO_REDIS_PORT"`
	// @gotags: env:"CODO_REDIS_PASSWORD"
	R_PASSWORD string `protobuf:"bytes,3,opt,name=R_PASSWORD,json=RPASSWORD,proto3" json:"R_PASSWORD,omitempty" env:"CODO_REDIS_PASSWORD"`
	// @gotags: env:"CODO_REDIS_DB"
	R_DB uint32 `protobuf:"varint,4,opt,name=R_DB,json=RDB,proto3" json:"R_DB,omitempty" env:"CODO_REDIS_DB"`
	// @gotags: env:"CODO_REDIS_READ_TIMEOUT"
	READ_TIMEOUT *durationpb.Duration `protobuf:"bytes,5,opt,name=READ_TIMEOUT,json=READTIMEOUT,proto3" json:"READ_TIMEOUT,omitempty" env:"CODO_REDIS_READ_TIMEOUT"`
	// @gotags: env:"CODO_REDIS_WRITE_TIMEOUT"
	WRITE_TIMEOUT *durationpb.Duration `protobuf:"bytes,6,opt,name=WRITE_TIMEOUT,json=WRITETIMEOUT,proto3" json:"WRITE_TIMEOUT,omitempty" env:"CODO_REDIS_WRITE_TIMEOUT"`
	// @gotags: env:"CODO_REDIS_DIAL_TIMEOUT"
	DIAL_TIMEOUT *durationpb.Duration `protobuf:"bytes,7,opt,name=DIAL_TIMEOUT,json=DIALTIMEOUT,proto3" json:"DIAL_TIMEOUT,omitempty" env:"CODO_REDIS_DIAL_TIMEOUT"`
	// @gotags: env:"CODO_REDIS_NETWORK"
	NETWORK string `protobuf:"bytes,8,opt,name=NETWORK,proto3" json:"NETWORK,omitempty" env:"CODO_REDIS_NETWORK"`
}

func (x *RedisConfig) Reset() {
	*x = RedisConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedisConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisConfig) ProtoMessage() {}

func (x *RedisConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisConfig.ProtoReflect.Descriptor instead.
func (*RedisConfig) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{6}
}

func (x *RedisConfig) GetR_HOST() string {
	if x != nil {
		return x.R_HOST
	}
	return ""
}

func (x *RedisConfig) GetR_PORT() uint32 {
	if x != nil {
		return x.R_PORT
	}
	return 0
}

func (x *RedisConfig) GetR_PASSWORD() string {
	if x != nil {
		return x.R_PASSWORD
	}
	return ""
}

func (x *RedisConfig) GetR_DB() uint32 {
	if x != nil {
		return x.R_DB
	}
	return 0
}

func (x *RedisConfig) GetREAD_TIMEOUT() *durationpb.Duration {
	if x != nil {
		return x.READ_TIMEOUT
	}
	return nil
}

func (x *RedisConfig) GetWRITE_TIMEOUT() *durationpb.Duration {
	if x != nil {
		return x.WRITE_TIMEOUT
	}
	return nil
}

func (x *RedisConfig) GetDIAL_TIMEOUT() *durationpb.Duration {
	if x != nil {
		return x.DIAL_TIMEOUT
	}
	return nil
}

func (x *RedisConfig) GetNETWORK() string {
	if x != nil {
		return x.NETWORK
	}
	return ""
}

type OTELConfig_Trace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: env:"CODO_OTEL_TRACE_ENDPOINT"
	ENDPOINT string `protobuf:"bytes,1,opt,name=ENDPOINT,proto3" json:"ENDPOINT,omitempty" env:"CODO_OTEL_TRACE_ENDPOINT"`
	// @gotags: env:"CODO_OTEL_TRACE_INSECURE"
	INSECURE bool `protobuf:"varint,2,opt,name=INSECURE,proto3" json:"INSECURE,omitempty" env:"CODO_OTEL_TRACE_INSECURE"`
}

func (x *OTELConfig_Trace) Reset() {
	*x = OTELConfig_Trace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OTELConfig_Trace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTELConfig_Trace) ProtoMessage() {}

func (x *OTELConfig_Trace) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTELConfig_Trace.ProtoReflect.Descriptor instead.
func (*OTELConfig_Trace) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{5, 0}
}

func (x *OTELConfig_Trace) GetENDPOINT() string {
	if x != nil {
		return x.ENDPOINT
	}
	return ""
}

func (x *OTELConfig_Trace) GetINSECURE() bool {
	if x != nil {
		return x.INSECURE
	}
	return false
}

type OTELConfig_Metric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: env:"CODO_OTEL_METRIC_ENABLE_EXEMPLAR"
	ENABLE_EXEMPLAR bool `protobuf:"varint,1,opt,name=ENABLE_EXEMPLAR,json=ENABLEEXEMPLAR,proto3" json:"ENABLE_EXEMPLAR,omitempty" env:"CODO_OTEL_METRIC_ENABLE_EXEMPLAR"`
}

func (x *OTELConfig_Metric) Reset() {
	*x = OTELConfig_Metric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OTELConfig_Metric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTELConfig_Metric) ProtoMessage() {}

func (x *OTELConfig_Metric) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTELConfig_Metric.ProtoReflect.Descriptor instead.
func (*OTELConfig_Metric) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{5, 1}
}

func (x *OTELConfig_Metric) GetENABLE_EXEMPLAR() bool {
	if x != nil {
		return x.ENABLE_EXEMPLAR
	}
	return false
}

type OTELConfig_Log struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: env:"CODO_OTEL_LOG_LEVEL"
	LEVEL string `protobuf:"bytes,1,opt,name=LEVEL,proto3" json:"LEVEL,omitempty" env:"CODO_OTEL_LOG_LEVEL"`
}

func (x *OTELConfig_Log) Reset() {
	*x = OTELConfig_Log{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OTELConfig_Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTELConfig_Log) ProtoMessage() {}

func (x *OTELConfig_Log) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTELConfig_Log.ProtoReflect.Descriptor instead.
func (*OTELConfig_Log) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{5, 2}
}

func (x *OTELConfig_Log) GetLEVEL() string {
	if x != nil {
		return x.LEVEL
	}
	return ""
}

var File_conf_conf_proto protoreflect.FileDescriptor

var file_conf_conf_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0a, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x1a, 0x1e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa2, 0x02,
	0x0a, 0x09, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x12, 0x27, 0x0a, 0x03, 0x41,
	0x50, 0x50, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x03, 0x41, 0x50, 0x50, 0x12, 0x24, 0x0a, 0x02, 0x44, 0x42, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x42,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x02, 0x44, 0x42, 0x12, 0x2d, 0x0a, 0x05, 0x52, 0x45,
	0x44, 0x49, 0x53, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x72, 0x61, 0x74,
	0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x05, 0x52, 0x45, 0x44, 0x49, 0x53, 0x12, 0x2a, 0x0a, 0x04, 0x4f, 0x54, 0x45,
	0x4c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x54, 0x45, 0x4c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x04, 0x4f, 0x54, 0x45, 0x4c, 0x12, 0x3c, 0x0a, 0x0a, 0x50, 0x52, 0x4f, 0x4d, 0x45, 0x54, 0x48,
	0x45, 0x55, 0x53, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6b, 0x72, 0x61, 0x74,
	0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x50, 0x52, 0x4f, 0x4d, 0x45, 0x54, 0x48,
	0x45, 0x55, 0x53, 0x12, 0x2d, 0x0a, 0x05, 0x50, 0x50, 0x52, 0x4f, 0x46, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x50, 0x70, 0x72, 0x6f, 0x66, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x50, 0x50, 0x52,
	0x4f, 0x46, 0x22, 0xa1, 0x02, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x41, 0x4d, 0x45, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x41, 0x4d, 0x45, 0x12, 0x33, 0x0a, 0x03, 0x45, 0x4e, 0x56, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x21, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41,
	0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x03, 0x45, 0x4e, 0x56, 0x12, 0x33, 0x0a, 0x07, 0x54, 0x49, 0x4d,
	0x45, 0x4f, 0x55, 0x54, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x44,
	0x44, 0x52, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x44, 0x44, 0x52, 0x12, 0x18,
	0x0a, 0x07, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x45, 0x52, 0x53,
	0x49, 0x4f, 0x4e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x56, 0x45, 0x52, 0x53, 0x49,
	0x4f, 0x4e, 0x22, 0x32, 0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x44,
	0x45, 0x56, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x52, 0x45, 0x10, 0x02, 0x12, 0x07, 0x0a,
	0x03, 0x50, 0x52, 0x44, 0x10, 0x03, 0x22, 0x6e, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74,
	0x68, 0x65, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x4e,
	0x41, 0x42, 0x4c, 0x45, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x45, 0x4e, 0x41,
	0x42, 0x4c, 0x45, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x12, 0x12,
	0x0a, 0x04, 0x41, 0x44, 0x44, 0x52, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x44,
	0x44, 0x52, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x41, 0x54, 0x48, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x50, 0x41, 0x54, 0x48, 0x22, 0x53, 0x0a, 0x0b, 0x50, 0x70, 0x72, 0x6f, 0x66, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x12, 0x18, 0x0a,
	0x07, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x44, 0x44, 0x52, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x44, 0x44, 0x52, 0x22, 0x9b, 0x03, 0x0a, 0x08,
	0x44, 0x42, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x44, 0x42, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x42, 0x54, 0x59, 0x50,
	0x45, 0x12, 0x17, 0x0a, 0x07, 0x44, 0x42, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x44, 0x42, 0x55, 0x53, 0x45, 0x52, 0x12, 0x1f, 0x0a, 0x0b, 0x44, 0x42,
	0x5f, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x44, 0x42, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x12, 0x17, 0x0a, 0x07, 0x44,
	0x42, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x42,
	0x48, 0x4f, 0x53, 0x54, 0x12, 0x17, 0x0a, 0x07, 0x44, 0x42, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x42, 0x4e, 0x41, 0x4d, 0x45, 0x12, 0x26, 0x0a,
	0x0f, 0x44, 0x42, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x46, 0x49, 0x58,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x44, 0x42, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x50,
	0x52, 0x45, 0x46, 0x49, 0x58, 0x12, 0x17, 0x0a, 0x07, 0x44, 0x42, 0x5f, 0x46, 0x49, 0x4c, 0x45,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x42, 0x46, 0x49, 0x4c, 0x45, 0x12, 0x17,
	0x0a, 0x07, 0x44, 0x42, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x44, 0x42, 0x50, 0x4f, 0x52, 0x54, 0x12, 0x27, 0x0a, 0x0f, 0x44, 0x42, 0x5f, 0x4d, 0x61,
	0x78, 0x49, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0e, 0x44, 0x42, 0x4d, 0x61, 0x78, 0x49, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x73,
	0x12, 0x27, 0x0a, 0x0f, 0x44, 0x42, 0x5f, 0x4d, 0x61, 0x78, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f,
	0x6e, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x44, 0x42, 0x4d, 0x61, 0x78,
	0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x73, 0x12, 0x48, 0x0a, 0x12, 0x44, 0x42, 0x5f,
	0x43, 0x6f, 0x6e, 0x6e, 0x4d, 0x61, 0x78, 0x4c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x11, 0x44, 0x42, 0x43, 0x6f, 0x6e, 0x6e, 0x4d, 0x61, 0x78, 0x4c, 0x69, 0x66, 0x65, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x44, 0x45, 0x42, 0x55, 0x47, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x44, 0x45, 0x42, 0x55, 0x47, 0x22, 0xb6, 0x02, 0x0a, 0x0a, 0x4f, 0x54,
	0x45, 0x4c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x32, 0x0a, 0x05, 0x54, 0x52, 0x41, 0x43,
	0x45, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x54, 0x45, 0x4c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x05, 0x54, 0x52, 0x41, 0x43, 0x45, 0x12, 0x35, 0x0a, 0x06,
	0x4d, 0x45, 0x54, 0x52, 0x49, 0x43, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6b,
	0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x54, 0x45, 0x4c, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x06, 0x4d, 0x45, 0x54,
	0x52, 0x49, 0x43, 0x12, 0x2c, 0x0a, 0x03, 0x4c, 0x4f, 0x47, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x54,
	0x45, 0x4c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x03, 0x4c, 0x4f,
	0x47, 0x1a, 0x3f, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x4e,
	0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x45, 0x4e,
	0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x4e, 0x53, 0x45, 0x43, 0x55,
	0x52, 0x45, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x4e, 0x53, 0x45, 0x43, 0x55,
	0x52, 0x45, 0x1a, 0x31, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x27, 0x0a, 0x0f,
	0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x45, 0x58, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x52, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x45, 0x58, 0x45,
	0x4d, 0x50, 0x4c, 0x41, 0x52, 0x1a, 0x1b, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x4c, 0x45, 0x56, 0x45, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x45, 0x56,
	0x45, 0x4c, 0x22, 0xc3, 0x02, 0x0a, 0x0b, 0x52, 0x65, 0x64, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x52, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x52, 0x48, 0x4f, 0x53, 0x54, 0x12, 0x15, 0x0a, 0x06, 0x52, 0x5f, 0x50,
	0x4f, 0x52, 0x54, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x52, 0x50, 0x4f, 0x52, 0x54,
	0x12, 0x1d, 0x0a, 0x0a, 0x52, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x12,
	0x11, 0x0a, 0x04, 0x52, 0x5f, 0x44, 0x42, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x52,
	0x44, 0x42, 0x12, 0x3c, 0x0a, 0x0c, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f,
	0x55, 0x54, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x52, 0x45, 0x41, 0x44, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54,
	0x12, 0x3e, 0x0a, 0x0d, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55,
	0x54, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0c, 0x57, 0x52, 0x49, 0x54, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54,
	0x12, 0x3c, 0x0a, 0x0c, 0x44, 0x49, 0x41, 0x4c, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0b, 0x44, 0x49, 0x41, 0x4c, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x12, 0x18,
	0x0a, 0x07, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x2d,
	0x69, 0x6e, 0x74, 0x72, 0x61, 0x2e, 0x31, 0x32, 0x33, 0x75, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x6f, 0x64, 0x6f, 0x2f, 0x63, 0x6f, 0x64, 0x6f, 0x2d, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x65, 0x73, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x63, 0x6f, 0x6e,
	0x66, 0x3b, 0x63, 0x6f, 0x6e, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_conf_conf_proto_rawDescOnce sync.Once
	file_conf_conf_proto_rawDescData = file_conf_conf_proto_rawDesc
)

func file_conf_conf_proto_rawDescGZIP() []byte {
	file_conf_conf_proto_rawDescOnce.Do(func() {
		file_conf_conf_proto_rawDescData = protoimpl.X.CompressGZIP(file_conf_conf_proto_rawDescData)
	})
	return file_conf_conf_proto_rawDescData
}

var file_conf_conf_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_conf_conf_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_conf_conf_proto_goTypes = []interface{}{
	(AppConfig_Environment)(0),  // 0: kratos.api.AppConfig.Environment
	(*Bootstrap)(nil),           // 1: kratos.api.Bootstrap
	(*AppConfig)(nil),           // 2: kratos.api.AppConfig
	(*PrometheusConfig)(nil),    // 3: kratos.api.PrometheusConfig
	(*PprofConfig)(nil),         // 4: kratos.api.PprofConfig
	(*DBConfig)(nil),            // 5: kratos.api.DBConfig
	(*OTELConfig)(nil),          // 6: kratos.api.OTELConfig
	(*RedisConfig)(nil),         // 7: kratos.api.RedisConfig
	(*OTELConfig_Trace)(nil),    // 8: kratos.api.OTELConfig.Trace
	(*OTELConfig_Metric)(nil),   // 9: kratos.api.OTELConfig.Metric
	(*OTELConfig_Log)(nil),      // 10: kratos.api.OTELConfig.Log
	(*durationpb.Duration)(nil), // 11: google.protobuf.Duration
}
var file_conf_conf_proto_depIdxs = []int32{
	2,  // 0: kratos.api.Bootstrap.APP:type_name -> kratos.api.AppConfig
	5,  // 1: kratos.api.Bootstrap.DB:type_name -> kratos.api.DBConfig
	7,  // 2: kratos.api.Bootstrap.REDIS:type_name -> kratos.api.RedisConfig
	6,  // 3: kratos.api.Bootstrap.OTEL:type_name -> kratos.api.OTELConfig
	3,  // 4: kratos.api.Bootstrap.PROMETHEUS:type_name -> kratos.api.PrometheusConfig
	4,  // 5: kratos.api.Bootstrap.PPROF:type_name -> kratos.api.PprofConfig
	0,  // 6: kratos.api.AppConfig.ENV:type_name -> kratos.api.AppConfig.Environment
	11, // 7: kratos.api.AppConfig.TIMEOUT:type_name -> google.protobuf.Duration
	11, // 8: kratos.api.DBConfig.DB_ConnMaxLifetime:type_name -> google.protobuf.Duration
	8,  // 9: kratos.api.OTELConfig.TRACE:type_name -> kratos.api.OTELConfig.Trace
	9,  // 10: kratos.api.OTELConfig.METRIC:type_name -> kratos.api.OTELConfig.Metric
	10, // 11: kratos.api.OTELConfig.LOG:type_name -> kratos.api.OTELConfig.Log
	11, // 12: kratos.api.RedisConfig.READ_TIMEOUT:type_name -> google.protobuf.Duration
	11, // 13: kratos.api.RedisConfig.WRITE_TIMEOUT:type_name -> google.protobuf.Duration
	11, // 14: kratos.api.RedisConfig.DIAL_TIMEOUT:type_name -> google.protobuf.Duration
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_conf_conf_proto_init() }
func file_conf_conf_proto_init() {
	if File_conf_conf_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_conf_conf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bootstrap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrometheusConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PprofConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OTELConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedisConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OTELConfig_Trace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OTELConfig_Metric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OTELConfig_Log); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_conf_conf_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_conf_conf_proto_goTypes,
		DependencyIndexes: file_conf_conf_proto_depIdxs,
		EnumInfos:         file_conf_conf_proto_enumTypes,
		MessageInfos:      file_conf_conf_proto_msgTypes,
	}.Build()
	File_conf_conf_proto = out.File
	file_conf_conf_proto_rawDesc = nil
	file_conf_conf_proto_goTypes = nil
	file_conf_conf_proto_depIdxs = nil
}
